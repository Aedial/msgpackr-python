[tool.poetry]
name = "msgpackr-python"
version = "0.1.4"
description = "Re-implementation of kriszyp's msgpackr Javascript module"
license = "MIT"
authors = ["Aedial <aedial.dev@gmail.com>"]
readme = "README.md"
repository = "https://github.com/Aedial/msgpackr-python"
keywords = ["python", "msgpack", "msgpackr"]
classifiers = [
    "Programming Language :: Python :: 3.7",
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
]
packages = [{include = "msgpackr"}]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/Aedial/msgpackr-python/issues"

[tool.poetry.dependencies]
python = "^3.7.10"

[tool.poetry.group.dev.dependencies]
pre-commit = "^2.21.0"
pylint = "^2.15.5"
pytest = "^7.3.1"
poetry = "=1.5.1"

[tool.poetry.group.docs.dependencies]
sphinx = "^5.3.0"
# patched repo to work with relative links
myst_parser = {git = "https://github.com/Aedial/MyST-Parser", rev = "adcdb9a"}
linkify-it-py = "^2.0.0"
sphinx-copybutton = "^0.5.2"
sphinx-last-updated-by-git = "^0.3.4"
sphinx-hoverxref = "^1.3.0"

[tool.bandit]
skips = ["B101", "B311"]

[tool.black]
line-length = 120

[tool.isort]
line_length = 120
profile = "black"

[tool.pylint]
max-line-length = 120
disable = [
    # access to private members
    "W0212",
    # FIXMEs and TODOs
    "W0511",
    # names
    "C0103",
    # missing docstring
    "C0114", "C0115", "C0116",
    # duplicate code between files (dumb how far it overreaches)
    "R0801",
    # too many/few methods/arguments/X (splitting just makes the code messier)
    "R0902", "R0903", "R0904", "R0913", "R0914",
    # too many branches (mostly sanitization and formatting)
    "R0912"
]

[tool.pylint.MASTER]
# add tbe module to the path, as pylint fails to detect the package
init-hook="""
from sys import path
from pylint.config import find_default_config_files
path.extend(p.parent for p in find_default_config_files())
"""

[tool.pytest.ini_options]
xfail_strict = true
empty_parameter_set_mark = "fail_at_collect"
addopts = "--tb=short -vv"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
test = "poetry_scripts:test"
